ffi.cdef[[

	typedef struct { int flags; } DrawFlags_t;
	typedef struct { int flags; } Flags_t;
	typedef struct { int flags; } PlaneFlags_t;
    typedef struct { int flags; } SpecialFlags_t;
    typedef struct { int flags; } InfosFlags_t;

	typedef int (*Logic)(struct ObjectA*);

	typedef struct Rect {
		int Left;
		int Top;
		int Right;
		int Bottom;
	} Rect;

    typedef struct PData {
	    int Dir;
	    int _unkn2;
	    int _unkn3;
	    int _unkn4;
	    int _unkn5;
	    int _unkn6;
	    int _unkn7;
	    int _unkn8;
	    int _unkn9;
	    int _unkn10;
	    int _unkn11;
	    int _unkn12;
	    int _unkn13;
	    int _unkn14;
	    int _unkn15;
	    int _unkn16;
	    int _unkn17;
	    int _unkn18;
	    int _unkn19;
	    int SpawnPointX;
	    int SpawnPointY;
	    int _unkn22;
	    int _unkn23;
	    int _unkn24;
	    int _unkn25;
	    int _unkn26;
	    int _unkn27;
	    int _unkn28;
	    int PistolAmmo;
	    int MagicAmmo;
	    int TNTAmmo;
	    int Lives;
	    int AttemptNb;
	    int _unkn34;
	    int _unkn35;
	    int _unkns[35];
	    int _unkn71;
	    int _unkn72;
	    int _unkn73;
	    int _unkn74;
	    int _unkn75;
	    int _unkn76;
	    int _CGlit;
    } PData;


	typedef struct ObjectV {
		const void *_vtable;
		int _field_4;
		int _field_8;
		int _field_C;
		Logic Logic;
		struct PData* _p;
		void * _userdata;
		int State;
		int TimeDelay;
		int FrameDelay;
		int UserFlags;
		int XMin;
		int XMax;
		int YMin;
		int YMax;
		int _field_3C;
		int _field_40;
		int XTweak;
		int YTweak;
		int _FullLogicCycle;
		int _FullLogicCycle2_;
		int _field_54;
		int _field_58;
		int _field_5C;
		int _field_60;
		int User[8];
		int _field_84;
		int _field_88;
		int _field_8C;
		int _field_90;
		int _field_94;
		int _field_98;
		int _field_9C;
		int _field_A0;
		int _field_A4;
		int _field_A8;
		int _field_AC;
		int _field_B0;
		int _field_B4;
		int Counter;
		int Speed;
		int _f_C0;
		int _f_C4;
		int Width;
		int Height;
		int _f_D0;
		int _f_D4;
		int _f_D8;
		int _f_DC;
		int _f_E0;
		int _f_E4;
		int _f_E8;
		int _f_EC;
		Rect UserRect1;
		Rect UserRect2;
		int _f_110;
		int _f_114;
		int _f_118;
		int _f_11C;
		int _f_120;
		int _f_124;
		int _f_128;
		int _f_12C;
		int _f_130;
		int _f_134;
		int _f_138;
		int _f_13C;
		int field_140;
		int field_144;
		int field_148;
		int field_14C;
		int field_150;
		int field_154;
		int field_158;
		int field_15C;
		int field_160;
		int field_164;
		const char* TSound;
	} ObjectV;

	typedef struct ObjectA {
		void * const _vtable;
		const int ID;
		Flags_t Flags;
		int * const _Game_;
		int _field_10;
		int _field_14;
		int OSX;
		int OSY;
		Rect OnScreenBox;
		int OnScreenWidth;
		int OnScreenHeight;
		int OnScreen;
		int _field_3C;
		DrawFlags_t DrawFlags;
		int _field_44;
		int _field_48;
		int _field_4C;
		int _field_50;
		int _field_54;
		int _field_58;
		int X;
		int Y;
		Rect ClipRect;
		int Z;
		int _field_78;
		struct ObjectV* _v;
		int* _HitHandler;
		struct ObjectA* HitRef;
		int* _AttackHandler;
		struct ObjectA* AttRef;
		int* _BumpHandler;
		struct ObjectA* BumpRef;
		struct ObjectA* ObjectBelow;
		int _field_9C;
		int _field_A0;
		int _field_A4;
		int _field_A8;
		int AX;
		int AY;
		int _field_B4;
		int _field_B8;
		int _field_BC;
		int _field_C0;
		int _field_C4;
		int _field_C8;
		int _field_CC;
		int _field_D0;
		int _field_D4;
		int _field_D8;
		const char* _Name;
		struct ObjectA* GlitterPointer;
		int PhysicsType;
		int ObjectTypeFlags;
		int HitTypeFlags;
		int AttackTypeFlags;
		int _field_F4;
		int MoveResX;
		int MoveResY;
		int _field_100;
		int EditorX;
		int EditorY;
		int _EditorZ_;
		int _IsPlayer;
		int Score;
		int Points;
		int Powerup;
		int Damage;
		int Smarts;
		int Health;
		int Direction;
		int FacingDir;
		Rect MoveRect;
		Rect HitRect;
		Rect AttackRect;
		int SpeedX;
		int SpeedY;
		int _field_16C;
		int _field_170;
		int MoveClawX;
		int MoveClawY;
		int _field_17C;
		SpecialFlags_t SpecialFlags;
		int _field_184;
		int _field_188;
		int _field_18C;
		int I;
		void* Image;
		int* Graph;
		void* Sound;
		int _field_1A0;
		int EditorID;
		int IsGameplayObject;
		int _field_1AC;
		int _field_1B0;
		void* Animation;
		int _field_1B8;
		int _field_1BC;
		int _unkn_bool1;
		int _field_1C4;
		int _unkn_bool2;
		int _field_1CC;
		int _field_1D0;
		int _field_1D4;
		int _field_1D8;
		int _field_1DC;
		int* _field_1E0;
	} ObjectA;

	typedef struct LevelBasedData {
		int LevelNb;
		char SpringBoardAnimationIdle[32];
		char SpringBoardAnimationSpring[32];
		int DeathTileType;
		Rect SpringBoardDefRect;
		Rect TogglePegDefRect;
		Rect ElevatorDefRect;
		Rect CrumblingPegDefRect;
		Rect SteppingStoneDefRect;
		Rect BigElevatorDefRect;
		int BreakPlankWidth;
		int field_AC;
		int SplashY;
		int MPSkinnerPosX;
		int MPSkinnerPosY;
		int field_BC;
		int field_C0;
	} LevelBasedData;

    typedef struct NewPDataType {
		int Dir;
		int Attack;
		int Throw;
		int Lift;
		int ProjectileUse;
		int _f_14;
		int Death;
		int Attack2;
		int Attack3;
		int LoadedFromSavePoint;
		int _f_28;
		int ClimbDir;
		int ActiveSecondWeapon;
		int _f_34;
		int _f_38;
		int AttackType;
		int FallHeight;
		int SpawnScore;
		int SpawnHealth;
		int SpawnPointX;
		int SpawnPointY;
		int Attack3;
		int Attack4;
		int JumpHeight;
		int JumpStartY;
		int JumpPeakY;
		int ClimbPeakY;
		int Attack5;
		int PistolAmmo;
		int MagicAmmo;
		int TNTAmmo;
		int Lives;
		int AttemptNb;
		int ConveyorBeltForce;
		int CollectedCoin;
        int CollectedGoldbar;
        int CollectedRing;
        int CollectedChalice;
        int CollectedCross;
        int CollectedScepter;
        int CollectedGecko;
        int CollectedCrown;
        int CollectedSkull;
        int _f_AC;
        int GameCollectedCoin;
        int GameCollectedGoldbar;
        int GameCollectedRing;
        int GameCollectedChalice;
        int GameCollectedCross;
        int GameCollectedScepter;
        int GameCollectedGecko;
        int GameCollectedCrown;
        int GameCollectedSkull;
        int _f_D4;
        Rect LiftRect;
        int AttackCount;
        int ScoreToExtraLife;
        int LiftTime;
        int ThrowTime;
        int _f_F8;
        int LookUpTime;
        int DynThrowTime;
        int DynThrowMinTime;
        int DynThrowMaxTime;
        int JumpTime;
        int LookDownTime;
        int RunningLeapTime;
		int JumpPressTime;
		int _f_11C;
		int AFKTime;
		int _f_124;
		int _f_128;
		ObjectA* Lifted;
		ObjectA* CatnipGlitter;
	} NewPDataType;

    typedef struct Plane {
        void* const _vtable;
        const int ID;
        PlaneFlags_t Flags;
        int* const _Game_;
        int _field_10;
        int _field_14;
        int _field_18;
        int _field_1C;
        void* Tiles;
        void* Rows;
        const int Width;
        const int Height;
        const int WidthPx;
        const int HeightPx;
        const int TileWidth;
        const int TileHeight;
        Rect ScreenA;
        Rect Screen;
        Rect DefTileRect;
        int ScreenAWidth;
        int ScreenAHeight;
        int ScreenACenterX;
        int ScreenACenterY;
        int Z;
        int ScreenCenterX;
        int ScreenCenterY;
        const int _field_8C;
        const int _field_90;
        int SpeedX;
        int SpeedY;
        void* const _atable;
        void* Tileset;
        const int _field_A4;
        const int _field_A8;
        const int _field_AC;
        const int _field_B0;
        char Name[64];
        int _unknowns[20];
        int FillColor;
        int _more_unknowns[7];     
    } Plane;

    typedef struct SingleTileA {
        const int Type;
        const int TileWidth;
        const int TileHeight;
        int Attribute;
        const int _unknown;
    } SingleTileA;
    
    typedef struct DoubleTileA {
        const int Type;
        const int TileWidth;
        const int TileHeight;
        int Attribute;
        int RectAttribute;
        Rect TileRect;
    } DoubleTileA;

    typedef struct MaskTileA {
        const int Type;
        const int TileWidth;
        const int TileHeight;
        const int Attribute;
        const int _unknown1;
        void* Mask;
        const int _unknown2;
        const int _unknown3;
        const int _unknown4;
    } MaskTileA;

	int MessageBoxA(void *w, const char *txt, const char *cap, int type);
	bool LineTo(int hdc, int x, int y);
	bool Rectangle(int hdc, Rect);
	void* CreateSolidBrush(int);
	void* CreateHatchBrush(int, int);
	bool SelectObject(int, void*);
	bool DeleteObject(void*);
	int SetBkMode(int, int);
	void* CreatePen(int, int, int);
	bool SetTextColor(int, int);
	bool TextOutA(int, int, int, const char*, int);
	int DrawTextA(int, const char*, int, Rect*, unsigned int);
	int FillRect(int, Rect*, void*);
	int GetActiveWindow();
	int GetDlgItem(int, int);
	int SetDlgItemTextA(int, int, const char*);
	int SetDlgItemInt(int, int, int, int);
	bool EndDialog(int, int);
	int SetFocus(int);
	int LoadIconA(int,const char*);
	const char* GetCommandLineA();

	int PostMessageA(int, int, int, int);
	int SendMessageA(int, int, int, int);

	int DialogBoxParamA(int, const char*, int, int, int);
	unsigned int GetDlgItemTextA(int, int, int, int);
	bool UpdateWindow(int);
	int ShowCursor(int);

	int* LoadLibraryA(const char*);
	int* GetProcAddress(int*, const char*);

	int free(int, unsigned int);

]]
